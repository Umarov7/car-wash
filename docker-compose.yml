services:
  postgres-db:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_DB=car_wash_auth
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    volumes:
      - postgres-db:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - car-wash
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
  
  migrate:
    image: migrate/migrate
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:root@postgres:5432/car_wash_auth?sslmode=disable",
      "up"
    ]
    volumes:
      - ./auth/migrations:/migrations
    depends_on:
      - postgres-db
    networks:
      - car-wash
  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongodb-db:/data/mongodb
    ports:
      - "27018:27017"
    networks:
      - car-wash
    restart: unless-stopped
  
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6378:6379"
    networks:
      - car-wash
  
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2182:2181"
    networks:
      - car-wash
  
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_RETENTION_HOURS: 24
    ports:
      - "9093:9092"
    networks:
      - car-wash
    depends_on:
      - zookeeper
  
  auth-service:
    build: ./auth
    container_name: auth
    depends_on:
      - migrate
      - postgres-db
      - redis
    ports:
      - "8081:8081"
      - "50051:50051"
    networks:
      - car-wash
  
  booking-service:
    build: ./booking
    container_name: booking
    environment:
    - MONGODB_URI=mongodb://mongodb:27017/car_wash_booking
    depends_on:
      - mongodb
      - redis
      - zookeeper
      - kafka
    ports:
      - "50052:50052"
    networks:
      - car-wash
  
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    depends_on:
      - auth-service
      - booking-service
      - zookeeper
      - kafka
    ports:
      - "8080:8080"
    networks:
      - car-wash
  
networks:
  car-wash:
    external: true
    name: car-wash
    driver: bridge

volumes:
  postgres-db:
  mongodb-db: